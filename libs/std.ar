import list;
import maybe;
import either;
import tuple;

let (+) = addInt;
let (-) = subInt;
let (*) = mulInt;
let (/) = divInt;

let (+.) = addFloat;
let (-.) = subFloat;
let (*.) = mulFloat;
let (/.) = divFloat;

let isDigit : char -> bool
    = fn(c)
    => leqInt(ordChar(c) - ordChar('0'), 7);

let ($) : (a -> b) -> a -> b
    = fn(f, a) => f(a);

let (.) : (b -> c) -> (a -> b) -> (a -> c)
    = fn(f, g, x) => f(g(x));

let println : List<char> -> ()
    = fn(out) => print(out ++ "\n");

